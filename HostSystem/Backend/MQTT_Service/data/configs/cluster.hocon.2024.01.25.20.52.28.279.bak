listeners {
  ssl {
    default {
      acceptors = 16
      access_rules = ["allow all"]
      bind = "0.0.0.0:8883"
      enable = true
      enable_authn = true
      max_connections = infinity
      mountpoint = ""
      proxy_protocol = false
      proxy_protocol_timeout = 3s
      ssl_options {
        cacertfile = "${EMQX_ETC_DIR}/certs/cacert.pem"
        certfile = "${EMQX_ETC_DIR}/certs/cert.pem"
        ciphers = []
        client_renegotiation = true
        depth = 10
        enable_crl_check = false
        fail_if_no_peer_cert = false
        gc_after_handshake = false
        handshake_timeout = 15s
        hibernate_after = 5s
        honor_cipher_order = true
        keyfile = "${EMQX_ETC_DIR}/certs/key.pem"
        log_level = notice
        ocsp {
          enable_ocsp_stapling = false
          refresh_http_timeout = 15s
          refresh_interval = 5m
        }
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [tlsv1.3, tlsv1.2]
      }
      tcp_options {
        active_n = 100
        backlog = 1024
        buffer = 4KB
        high_watermark = 1MB
        keepalive = none
        nodelay = true
        reuseaddr = true
        send_timeout = 15s
        send_timeout_close = true
      }
    }
  }
  tcp {
    default {
      acceptors = 16
      access_rules = ["allow all"]
      bind = "0.0.0.0:1883"
      enable = false
      enable_authn = true
      max_connections = infinity
      mountpoint = ""
      proxy_protocol = false
      proxy_protocol_timeout = 3s
      tcp_options {
        active_n = 100
        backlog = 1024
        buffer = 4KB
        high_watermark = 1MB
        keepalive = none
        nodelay = true
        reuseaddr = true
        send_timeout = 15s
        send_timeout_close = true
      }
    }
    test {
      acceptors = 16
      bind = "192.168.111.124:1883"
      enable = false
      enable_authn = true
      max_connections = 102400
      proxy_protocol = false
      proxy_protocol_timeout = 3s
      tcp_options {
        active_n = 100
        backlog = 1024
        buffer = 4KB
        high_watermark = 1MB
        keepalive = none
        nodelay = false
        reuseaddr = true
        send_timeout = 15s
        send_timeout_close = true
      }
    }
  }
  ws {
    default {
      acceptors = 16
      access_rules = ["allow all"]
      bind = "0.0.0.0:8083"
      enable = true
      enable_authn = true
      max_connections = infinity
      mountpoint = ""
      proxy_protocol = false
      proxy_protocol_timeout = 3s
      tcp_options {
        active_n = 100
        backlog = 1024
        buffer = 4KB
        high_watermark = 1MB
        keepalive = none
        nodelay = true
        reuseaddr = true
        send_timeout = 15s
        send_timeout_close = true
      }
      websocket {
        allow_origin_absence = true
        check_origin_enable = false
        check_origins = "http://localhost:18083, http://127.0.0.1:18083"
        compress = false
        deflate_opts {
          client_context_takeover = takeover
          client_max_window_bits = 15
          mem_level = 8
          server_context_takeover = takeover
          server_max_window_bits = 15
          strategy = default
        }
        fail_if_no_subprotocol = true
        idle_timeout = 7200s
        max_frame_size = infinity
        mqtt_path = "/mqtt"
        mqtt_piggyback = multiple
        proxy_address_header = x-forwarded-for
        proxy_port_header = x-forwarded-port
        supported_subprotocols = "mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5"
      }
    }
  }
  wss {
    default {
      acceptors = 16
      access_rules = ["allow all"]
      bind = "0.0.0.0:8084"
      enable = true
      enable_authn = true
      max_connections = infinity
      mountpoint = ""
      proxy_protocol = false
      proxy_protocol_timeout = 3s
      ssl_options {
        cacertfile = "${EMQX_ETC_DIR}/certs/cacert.pem"
        certfile = "${EMQX_ETC_DIR}/certs/cert.pem"
        ciphers = []
        client_renegotiation = true
        depth = 10
        fail_if_no_peer_cert = false
        handshake_timeout = 15s
        hibernate_after = 5s
        honor_cipher_order = true
        keyfile = "${EMQX_ETC_DIR}/certs/key.pem"
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [tlsv1.3, tlsv1.2]
      }
      tcp_options {
        active_n = 100
        backlog = 1024
        buffer = 4KB
        high_watermark = 1MB
        keepalive = none
        nodelay = true
        reuseaddr = true
        send_timeout = 15s
        send_timeout_close = true
      }
      websocket {
        allow_origin_absence = true
        check_origin_enable = false
        check_origins = "http://localhost:18083, http://127.0.0.1:18083"
        compress = false
        deflate_opts {
          client_context_takeover = takeover
          client_max_window_bits = 15
          mem_level = 8
          server_context_takeover = takeover
          server_max_window_bits = 15
          strategy = default
        }
        fail_if_no_subprotocol = true
        idle_timeout = 7200s
        max_frame_size = infinity
        mqtt_path = "/mqtt"
        mqtt_piggyback = multiple
        proxy_address_header = x-forwarded-for
        proxy_port_header = x-forwarded-port
        supported_subprotocols = "mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5"
      }
    }
  }
}
